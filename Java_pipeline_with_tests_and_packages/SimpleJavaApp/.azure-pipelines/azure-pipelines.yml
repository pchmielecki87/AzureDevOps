
trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UseJava@1
  inputs:
    versionSpec: '11'
    jdkArchitectureOption: 'x64'
    jdkSourceOption: 'PreInstalled'
    jdkVersionOption: '11'
    jdkArchitectureOption: 'x64'
    checkLatest: true

- script: |
    cd $(Build.SourcesDirectory)/src
    mkdir -p $(Build.ArtifactStagingDirectory)
    javac -d $(Build.ArtifactStagingDirectory)/classes $(Build.SourcesDirectory)/src/main/java/com/example/Main.java
    jar cvf $(Build.ArtifactStagingDirectory)/$(Build.BuildId).jar -C $(Build.ArtifactStagingDirectory)/classes .
  displayName: 'Compile Java Code'

- script: |
    cd $(Build.SourcesDirectory)/src
    javac -cp $(Build.ArtifactStagingDirectory)/classes:. $(Build.SourcesDirectory)/src/test/java/com/example/MainTest.java
    java -cp $(Build.ArtifactStagingDirectory)/classes:$(Build.SourcesDirectory)/src/test/java:$(Build.SourcesDirectory)/lib/junit-5.7.1.jar org.junit.runner.JUnitCore com.example.MainTest
  displayName: 'Run Tests'

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: $(Build.ArtifactStagingDirectory)
    artifact: drop
    publishLocation: 'pipeline'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).jar'
    ArtifactName: 'java-app-jar'
    publishLocation: 'Container'
